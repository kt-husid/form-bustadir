@model BustadirForm.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = @Resources.EditBasicInfo;
}


<div class="row">
    <div class="col-md-offset-3 col-md-5">
        <div class="panel panel-default">
            <div class="panel-heading">
                <h3 class="panel-title"><strong>@ViewBag.Title</strong></h3>
            </div>
            <div class="panel-body">
                <div class="row">
                    <div class="col-md-12">

                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            <div class="form-horizontal">
                                <h4>@Resources.UserInformation</h4>
                                <hr />
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.HomeTown, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.HomeTown, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.HomeTown, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.Birthday, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.Birthday, new { htmlAttributes = new { @class = "form-control datefield" } })
                                        @Html.ValidationMessageFor(model => model.Birthday, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model.UserIdCode, htmlAttributes: new { @class = "control-label col-md-3" })
                                    <div class="col-md-9">
                                        @Html.EditorFor(model => model.UserIdCode, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                        @Html.ValidationMessageFor(model => model.UserIdCode, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                @*<div class="form-group">
                                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmailConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.EmailConfirmed)
                                                @Html.ValidationMessageFor(model => model.EmailConfirmed, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PasswordHash, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PasswordHash, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PasswordHash, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.SecurityStamp, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.SecurityStamp, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.SecurityStamp, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNumberConfirmed, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.PhoneNumberConfirmed)
                                                @Html.ValidationMessageFor(model => model.PhoneNumberConfirmed, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.TwoFactorEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.TwoFactorEnabled)
                                                @Html.ValidationMessageFor(model => model.TwoFactorEnabled, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LockoutEndDateUtc, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.LockoutEndDateUtc, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.LockoutEndDateUtc, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.LockoutEnabled, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            <div class="checkbox">
                                                @Html.EditorFor(model => model.LockoutEnabled)
                                                @Html.ValidationMessageFor(model => model.LockoutEnabled, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AccessFailedCount, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.AccessFailedCount, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.AccessFailedCount, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>*@

                                <div class="form-group">
                                    <div class="col-md-offset-3 col-md-9">
                                        <input type="submit" value="@Resources.Save" class="btn btn-primary" />
                                    </div>
                                </div>
                            </div>
                        }

                    </div>


                </div>

                <div class="row">
                    <div class="col-md-12">
                        <div class="form-group">
                            @Html.Label(@Resources.TwoFactorAuthentication, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-md-9">
                                @if (Model.TwoFactorEnabled)
                                {
                                    using (Html.BeginForm("DisableTwoFactorAuthentication", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>
                                            <input type="submit" value="@Resources.Disable" class="btn btn-primary btn-danger" />
                                        </text>
                                    }
                                }
                                else
                                {
                                    using (Html.BeginForm("EnableTwoFactorAuthentication", "Account", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
                                    {
                                        @Html.AntiForgeryToken()
                                        <text>
                                            <input type="submit" value="@Resources.Enable" class="btn btn-primary" />
                                        </text>
                                    }
                                }
                            </div>
                        </div>
                    </div>

                </div>

            </div>
        </div>
    </div>
</div>

<script>
    $(function () {
        activateDatePicker();
        ParseInputDate("#Birthday");
    });
</script>

@*<h2>@ViewBag.Title</h2>*@
@*@{
        var userId = User.Identity.GetUserId();
        var manager = new UserManager<BustadirForm.Models.ApplicationUser>(new Microsoft.AspNet.Identity.EntityFramework.UserStore<BustadirForm.Models.ApplicationUser>(new BustadirForm.Models.ApplicationDbContext()));
        var currentUser = manager.FindById(userId);
    }*@

@Html.Partial("_AccountFooter")
@Html.Partial("_DatePickerPartial")